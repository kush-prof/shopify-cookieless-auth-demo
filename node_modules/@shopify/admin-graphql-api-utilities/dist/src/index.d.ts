interface ParsedGid {
    id: string;
    params: Record<string, string>;
}
export declare function parseGidType(gid: string): string;
export declare function parseGid(gid: string): string;
export declare function parseGidWithParams(gid: string): ParsedGid;
export declare function composeGidFactory(namescape: string): (key: string, id: string | number, params?: Record<string, string>) => string;
export declare const composeGid: (key: string, id: string | number, params?: Record<string, string>) => string;
interface Edge<T> {
    node: T;
}
export declare function nodesFromEdges<T>(edges: Edge<T>[]): T[];
export declare function keyFromEdges<T, K extends keyof T>(edges: Edge<T>[], key: K): T[K][];
export {};
//# sourceMappingURL=index.d.ts.map